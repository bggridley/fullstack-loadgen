name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  # build_all:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Build and push Docker image
  #       env:
  #         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  #       run: |
  #         docker build -t frontend ./frontend
  #         docker build -t backend ./backend
  #         docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  #         docker tag frontend bggridley/frontend:latest
  #         docker push bggridley/frontend:latest
  #         docker tag backend bggridley/backend:latest
  #         docker push bggridley/backend:latest
  build-and-deploy-service:
    runs-on: ubuntu-latest
    env:
      EKS_CLUSTER_NAME: fullstack-loadgen

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      ### Maybe make this 2 steps or control based on whether we push to /frontend or
      ## Also package in the proper .env file into this build
      # - name: Build and Push
      #   run: |
      #     docker build -t ${{ secrets.ECR_URI }}/frontend:latest ./frontend
      #     docker build -t ${{ secrets.ECR_URI }}/backend:latest ./backend
      #     docker push ${{ secrets.ECR_URI }}/backend:latest
      #     docker push ${{ secrets.ECR_URI }}/frontend:latest
      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region ${{ secrets.AWS_REGION }}

      - name: Deploy to EKS     
        run: |
          kubectl delete -f ./k8s-manifests
          kubectl apply -f ./k8s-manifests


   #          kubectl delete -f ./k8s-manifests
    # - name: Log into Azure
      #   uses: azure/login@v2
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     auth-type: IDENTITY
      # - name: Login to ACR and build
      #   uses: Azure/docker-login@v2
      #   with:
      #     login-server: 'bendemo.azurecr.io'
      #     username: ${{ secrets.ACR_USER }}
      #     password: ${{ secrets.ACR_PASSWORD}}
      # - name: Build and Push
      #   run: |
      #     docker build -t bendemo.azurecr.io/frontend:latest ./frontend
      #     docker build -t bendemo.azurecr.io/backend:latest ./backend
      #     docker push bendemo.azurecr.io/backend:latest
      #     docker push bendemo.azurecr.io/frontend:latest
      # - uses: Azure/aks-set-context@v4
      #   with:
      #     creds: '${{ secrets.AZURE_CREDENTIALS }}'
      #     cluster-name: contoso
      #     resource-group: contoso-rg
