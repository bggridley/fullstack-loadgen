name: Build and Push Docker Image

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.7
          terraform_wrapper: false

      - name: Change directory to iac/terraform
        run: cd iac/terraform

      - name: Terraform Init
        id: init
        run: |
          terraform init
          terraform plan
          terraform apply -auto-approve
          echo "secrets_identity_id=$(terraform output secrets_identity_id)" >> "$GITHUB_OUTPUT"
        working-directory: iac/terraform
      
        env:
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    outputs:
      secrets_identity_id: ${{steps.init.outputs.secrets_identity_id}}
  build-and-deploy-service:
    needs: terraform
    runs-on: ubuntu-latest
    env:
      AKS_CLUSTER_NAME: fullstackloadgen
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    # - name: Login to ACR
    #   uses: Azure/docker-login@v2
    #   with:
    #     login-server: fullstackloadgen.azurecr.io
    #     username: ${{ secrets.ARM_CLIENT_ID }}
    #     password: ${{ secrets.ARM_CLIENT_SECRET}}
    # - name: LS
    #   run: |
    #     ls
    # - name: Build and Push
    #   run: |
    #     docker build -t fullstackloadgen.azurecr.io/frontend:latest ./frontend
    #     docker build -t fullstackloadgen.azurecr.io/backend:latest ./backend
    #     docker push fullstackloadgen.azurecr.io/backend:latest
    #     docker push fullstackloadgen.azurecr.io/frontend:latest
      - uses: Azure/aks-set-context@v4
        with:
          cluster-name: fullstackloadgen
          resource-group: fullstack-renamed ## don't hardcode these,
      - name: Deploy to AKS     
        run: |
          cd k8s-manifests
          for f in *.yml; do envsubst < $f | kubectl apply -f -; done
          echo "hello secret $SECRETS_IDENTITY_ID"
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          SECRETS_IDENTITY_ID: ${{ needs.terraform.outputs.secrets_identity_id}}