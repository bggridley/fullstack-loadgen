
# apiVersion: v1
# kind: Service
# metadata:
#   name: frontend-service
# spec:
#   selector:
#     app: frontend
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "backend-pc"
      containers:
        - name: frontend
          image: 008971675165.dkr.ecr.us-west-1.amazonaws.com/frontend:latest
          ports:
          - containerPort: 80
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
              
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: frontend-lb
# spec:
#   ports:
#   - port: 80
#     targetPort: 80
#   selector:
#     app: frontend
#   type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80